!function(t){var i={};function s(e){if(i[e])return i[e].exports;var a=i[e]={i:e,l:!1,exports:{}};return t[e].call(a.exports,a,a.exports,s),a.l=!0,a.exports}s.m=t,s.c=i,s.d=function(t,i,e){s.o(t,i)||Object.defineProperty(t,i,{configurable:!1,enumerable:!0,get:e})},s.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},s.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(i,"a",i),i},s.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},s.p="",s(s.s=0)}([function(t,i,s){"use strict";s.r(i);const e={r:0,g:255,b:255},a=(t,i,s)=>({r:i.r*(1-s)+t.r*s,g:i.g*(1-s)+t.g*s,b:i.b*(1-s)+t.b*s}),h={r:255,g:255,b:255};class o{constructor(t,i){this.path=[],this.size_limit=t,this.update_wait=i,this.update_counter=0}pushPoint(t){this.update_counter=(this.update_counter+1)%this.update_wait,0==this.update_counter&&(this.path.push(t),this.path.length>=this.size_limit&&this.path.shift())}pointToCanvas(t,i,s){return{x:(t.x-i.x)*s+800,y:(t.y-i.y)*s+450}}makeColor(t){let i=t/this.size_limit;if(i>.5){let t=1-2*(i-.5);return"rgb("+t*e.r+", "+t*e.g+", "+t*e.b+")"}{let t=a(h,e,1-2*i);return"rgb("+t.r+", "+t.g+", "+t.b+")"}}draw(t,i,s){if(this.path.length<1)return;let e=this.path[0],a=(this.pointToCanvas(e,i,s),0),h=void 0;this.path.forEach(e=>{if(0==a)h=e,a++;else{let o=this.pointToCanvas(e,i,s),l=this.pointToCanvas(h,i,s);t.beginPath(),t.moveTo(l.x,l.y),t.lineTo(o.x,o.y);let r=this.path.length-a;t.strokeStyle=this.makeColor(r),t.closePath(),t.stroke(),h=e,a++}})}}const l=2e3,r=1e3,n=255/l*2;let c=1;class d{constructor(t,i,s){this.id=c++,this.mass=t,this.x=i,this.y=s,this.velocity={x:0,y:0},this.acceleration={x:0,y:0},this.radius=10+3*Math.log(t),this.isColliding=!1,this.time=0,this.path_tracker=new o(600,3)}drawPath(t,i,s,e){this.path_tracker.draw(s,i,e)}draw(t,i,s,e){let a=this.radius*e,h=(this.x-i.x)*e+800,o=(this.y-i.y)*e+450;if(a>.5){if(this.time<l){let t=255,i=0;this.time<r?t=Math.floor(n*this.time):this.time>=r&&(i=Math.floor(n*(this.time-r)));let e="rgb(255, "+t+", "+i+")";s.fillStyle=e}else s.fillStyle="white";s.beginPath(),s.arc(h,o,a,0,2*Math.PI),s.fill()}else s.fillStyle="white",s.fillRect(h,o,1,1)}}class u{constructor(t){this.G=t}exertGravityOnBall(t,i,s){let e={x:0,y:0};i.particles.forEach(t=>{if(t.id!=s.id){let a=t.x-s.x,h=t.y-s.y,o=a*a+h*h,l=this.G*t.mass/o;if(l>.1){let r=Math.sqrt(o);if(r<=s.radius+t.radius)i.collisions.push([s,t]),s.isColliding=!0,t.isColliding=!0;else{let t={x:a/r,y:h/r};e.x+=l*t.x,e.y+=l*t.y}}}}),s.acceleration.x+=e.x,s.acceleration.y+=e.y,s.velocity.x+=e.x*t.seconds,s.velocity.y+=e.y*t.seconds,s.x+=s.velocity.x*t.seconds,s.y+=s.velocity.y*t.seconds,s.path_tracker.pushPoint({x:s.x,y:s.y})}}class y{constructor(t){this.particles=[],this.removals=[],this.collisions=[],this.gravity=t,this.horizon=16e3}addBallWithVelocity(t,i,s,e,a){let h=new d(t,i,s);h.velocity={x:e,y:a},this.addParticle(h)}addParticle(t){this.particles.push(t)}particles(){return particles}handleCollisions(){this.collisions.forEach(t=>{let i=t[0],s=t[1],e=this.particles.indexOf(i);e>-1&&this.particles.splice(e,1);let a=this.particles.indexOf(s);a>-1&&this.particles.splice(a,1);let h=i.mass+s.mass,o=(i.x*i.mass+s.x*s.mass)/h,l=(i.y*i.mass+s.y*s.mass)/h,r=(i.velocity.x*i.mass+s.velocity.x*s.mass)/h,n=(i.velocity.y*i.mass+s.velocity.y*s.mass)/h,c=new d(h,o,l);c.velocity={x:r,y:n},this.particles.push(c)}),this.collisions=[]}removeDistantBalls(){this.removals.forEach(t=>{let i=this.particles.indexOf(t);i>-1&&this.particles.splice(i,1)}),this.removals=[]}updateBalls(t){this.particles.forEach(i=>{i.x<-this.horizon||i.x>this.horizon||i.y<-this.horizon||i.y>this.horizon?this.removals.push(i):(i.time+=t.ms,i.isColliding||this.gravity.exertGravityOnBall(t,this,i))})}update(t){this.handleCollisions(),this.removeDistantBalls(),this.updateBalls(t)}}let p=new class{constructor(t,i,s){this.ctx=t,this.width=i,this.height=s,this.ctx.canvas.width=i,this.ctx.canvas.height=s;let e=new u(1e4);this.universe=new y(e),this.wheel=0,this.zoom=1,this.origin={x:0,y:0},this.setInput(),this.isPaused=!1,this.trackPaths=!0}togglePause(){this.isPaused=!this.isPaused}togglePaths(){this.trackPaths=!this.trackPaths}setInput(){this.down=!1,this.ctx.canvas.addEventListener("wheel",t=>{let i=t.wheelDelta/2e3;this.wheel+=i,this.zoom=Math.exp(this.wheel),console.log("zoom: "+this.zoom)}),this.ctx.canvas.addEventListener("mousedown",t=>{this.down=!0}),this.ctx.canvas.addEventListener("mousemove",t=>{this.down&&(this.origin.x-=t.movementX/this.zoom,this.origin.y-=t.movementY/this.zoom)}),this.ctx.canvas.addEventListener("mouseup",t=>{this.down=!1})}init(){var t;(t=this.universe).addBallWithVelocity(1e3,0,0,0,0),t.addBallWithVelocity(1,-400,0,0,50),t.addBallWithVelocity(1,700,0,0,-50),t.addBallWithVelocity(1,0,400,150,0),t.addBallWithVelocity(1,800,800,60,-60)}update(t){this.isPaused||this.universe.update(t)}clear(){this.ctx.fillStyle="black",this.ctx.fillRect(0,0,this.width,this.height)}drawHorizon(){let t=this.universe.horizon,i=this.ctx,s=this.zoom;i.strokeStyle="red",i.beginPath();let e=(-t-this.origin.x)*s+800,a=(t-this.origin.x)*s+800,h=(-t-this.origin.y)*s+450,o=(t-this.origin.y)*s+450;i.moveTo(e,h),i.lineTo(a,h),i.lineTo(a,o),i.lineTo(e,o),i.lineTo(e,h),i.closePath(),i.stroke()}draw(t){let i=this.origin,s=this.ctx,e=this.zoom;this.drawHorizon(),this.universe.particles.forEach(a=>{a.draw(t,i,s,e)}),this.trackPaths&&this.universe.particles.forEach(a=>{a.drawPath(t,i,s,e)})}}(document.getElementById("canvas").getContext("2d"),1600,900);const m={seconds:1/60,ms:1e3/60};p.init();const x=setInterval(function(){try{p.update(m),p.clear(),p.draw(m)}catch(t){console.log(t),clearInterval(x)}},1/60*1e3);document.getElementById("arb").onclick=(()=>{let t=5*Math.random()+.5,i=2*Math.random()*Math.PI,s=600*Math.random()+200,e=s*Math.cos(i),a=s*Math.sin(i),h=800*Math.random()-400,o=800*Math.random()-400;p.universe.addBallWithVelocity(t,e,a,h,o)});let v=document.getElementById("pause");v.onclick=(()=>{p.togglePause(),p.isPaused?v.innerHTML="Continue":v.innerHTML="Pause"}),document.getElementById("track-paths").onclick=(()=>{p.togglePaths()})}]);